name: 'Main'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # make sure build/ci work properly (+ build with ncc)
      # Use `--no-lockfile` to ensure @dappnode/dappnodesdk is at the latest version
      - run: yarn install --no-lockfile
      - run: yarn lint
      - run: yarn format-check
      - run: yarn build
      - run: yarn test

      # make sure the action works on a clean machine without building
      - name: Setup a mock package to test locally
        run: npx @dappnode/dappnodesdk init --yes --force
      - name: Test action locally
        uses: ./
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
          PINATA_SECRET_API_KEY: ${{ secrets.PINATA_SECRET_API_KEY }}
        env:
          SKIP_COMMIT: true

  release:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      # Use `--no-lockfile` to ensure @dappnode/dappnodesdk is at the latest version
      - run: yarn install --no-lockfile
      - run: yarn build

      - name: Setup git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Commit if pending changes
        id: commit_changes
        run: |
          git add -A
          git commit -am "Build dist files" \
            && echo "dist_changed=true" >> $GITHUB_ENV \
            || echo "nothing to commit"

      - name: Tag new release commit
        # if: ${{ steps.commit_changes.outputs.dist_changed }} == 'true'
        id: create_release
        run: |
          export TAG_NAME=$(npm version patch)
          export TAG_MAJOR="${TAG_NAME%%.*}"
          git tag --force -a "${TAG_MAJOR}" -m "Release ${TAG_NAME}"
          git push --force origin "${TAG_MAJOR}"
          git push origin --all
          git push origin --tags
